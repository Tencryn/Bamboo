From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Tencryn <41876297+Tencryn@users.noreply.github.com>
Date: Sat, 13 Nov 2021 19:30:45 +0000
Subject: [PATCH] Fuel Preservation


diff --git a/src/main/java/net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity.java b/src/main/java/net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity.java
index f5fd6e0fd67c1b760000c2e75ce09d1c680b4cf6..ad538db7371598016b340e10fb3ef46db99badd1 100644
--- a/src/main/java/net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity.java
+++ b/src/main/java/net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity.java
@@ -77,6 +77,7 @@ public abstract class AbstractFurnaceBlockEntity extends BaseContainerBlockEntit
     public double cookSpeedMultiplier = 1.0; // Paper - cook speed multiplier API
     public int cookingProgress;
     public int cookingTotalTime;
+    public boolean isPreservingFuel; // Bamboo - fuel preservation
     protected final ContainerData dataAccess;
     private final Object2IntOpenHashMap<ResourceLocation> recipesUsed;
     public final RecipeType<? extends AbstractCookingRecipe> recipeType;
@@ -307,6 +308,12 @@ public abstract class AbstractFurnaceBlockEntity extends BaseContainerBlockEntit
             this.cookSpeedMultiplier = nbt.getDouble("Paper.CookSpeedMultiplier");
         }
         // Paper end
+
+        // Bamboo start - fuel preservation
+        if (nbt.contains("Bamboo.PreserveFuel")) {
+            this.isPreservingFuel = nbt.getBoolean("Bamboo.PreserveFuel");
+        }
+        // Bamboo end
     }
 
     @Override
@@ -316,6 +323,7 @@ public abstract class AbstractFurnaceBlockEntity extends BaseContainerBlockEntit
         nbt.putShort("CookTime", (short) this.cookingProgress);
         nbt.putShort("CookTimeTotal", (short) this.cookingTotalTime);
         nbt.putDouble("Paper.CookSpeedMultiplier", this.cookSpeedMultiplier); // Paper - cook speed multiplier API
+        nbt.putBoolean("Bamboo.PreserveFuel", this.isPreservingFuel); // Bamboo - fuel preservation
         ContainerHelper.saveAllItems(nbt, this.items);
         CompoundTag nbttagcompound1 = new CompoundTag();
 
@@ -328,9 +336,11 @@ public abstract class AbstractFurnaceBlockEntity extends BaseContainerBlockEntit
     public static void serverTick(Level world, BlockPos pos, BlockState state, AbstractFurnaceBlockEntity blockEntity) {
         boolean flag = blockEntity.isLit();
         boolean flag1 = false;
+        boolean flag2 = blockEntity.isPreservingFuel; // Bamboo, fuel preservation
 
         if (blockEntity.isLit()) {
             --blockEntity.litTime;
+            blockEntity.isPreservingFuel = false; // Bamboo
         }
 
         ItemStack itemstack = (ItemStack) blockEntity.items.get(1);
@@ -413,14 +423,29 @@ public abstract class AbstractFurnaceBlockEntity extends BaseContainerBlockEntit
                 }
             } else {
                 blockEntity.cookingProgress = 0;
+
+                // Bamboo start - fuel preservation
+                if (net.rocryn.bamboo.BambooConfig.preserveFuel && blockEntity.isLit()) {
+                    ++blockEntity.litTime;
+                    blockEntity.isPreservingFuel = true;
+                }
+                // Bamboo end
             }
         }
 
-        if (flag != blockEntity.isLit()) {
+        // Bamboo start - fuel preservation
+        if (flag != blockEntity.isLit() || flag2 != blockEntity.isPreservingFuel) {
+            boolean lit = blockEntity.isLit();
+
+            if (flag2 != blockEntity.isPreservingFuel) {
+                lit = !blockEntity.isPreservingFuel;
+            }
+
             flag1 = true;
-            state = (BlockState) state.setValue(AbstractFurnaceBlock.LIT, blockEntity.isLit());
+            state = (BlockState) state.setValue(AbstractFurnaceBlock.LIT, lit);
             world.setBlock(pos, state, 3);
         }
+        // Bamboo end
 
         if (flag1) {
             setChanged(world, pos, state);
