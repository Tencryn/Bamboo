From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Tencryn <41876297+Tencryn@users.noreply.github.com>
Date: Sat, 27 Nov 2021 21:04:47 +0000
Subject: [PATCH] Disable Enderman Teleporting From Spawner


diff --git a/src/main/java/net/minecraft/world/entity/monster/EnderMan.java b/src/main/java/net/minecraft/world/entity/monster/EnderMan.java
index 6a4214b6110119215154fee48d000bc1051ea626..fa3895efbdfa098a71659890967d27b9b2bc9661 100644
--- a/src/main/java/net/minecraft/world/entity/monster/EnderMan.java
+++ b/src/main/java/net/minecraft/world/entity/monster/EnderMan.java
@@ -308,11 +308,13 @@ public class EnderMan extends Monster implements NeutralMob {
     @Override
     protected void customServerAiStep() {
         if ((getRider() == null || !this.isControllable()) && this.level.isDay() && this.tickCount >= this.targetChangeTime + 600) { // Purpur - no random teleporting
-            float f = this.getBrightness();
+            if (net.rocryn.bamboo.BambooConfig.endermanSpawnerTeleport || !this.spawnedViaMobSpawner) { // Bamboo - don't teleport if spawned via spawner
+                float f = this.getBrightness();
 
-            if (f > 0.5F && this.level.canSeeSky(this.blockPosition()) && this.random.nextFloat() * 30.0F < (f - 0.4F) * 2.0F && this.tryEscape(com.destroystokyo.paper.event.entity.EndermanEscapeEvent.Reason.RUNAWAY)) { // Paper
-                this.setTarget((LivingEntity) null);
-                this.teleport();
+                if (f > 0.5F && this.level.canSeeSky(this.blockPosition()) && this.random.nextFloat() * 30.0F < (f - 0.4F) * 2.0F && this.tryEscape(com.destroystokyo.paper.event.entity.EndermanEscapeEvent.Reason.RUNAWAY)) { // Paper
+                    this.setTarget((LivingEntity) null);
+                    this.teleport();
+                }
             }
         }
 
@@ -414,6 +416,7 @@ public class EnderMan extends Monster implements NeutralMob {
         if (this.isInvulnerableTo(source)) {
             return false;
         } else if (getRider() != null && this.isControllable()) { return super.hurt(source, amount); // Purpur - no teleporting on damage
+        } else if (!net.rocryn.bamboo.BambooConfig.endermanSpawnerTeleport && this.spawnedViaMobSpawner) { return super.hurt(source, amount); // Bamboo - don't teleport if spawned via spawner
         } else if (org.purpurmc.purpur.PurpurConfig.endermanShortHeight && source == DamageSource.IN_WALL) { return false; // Purpur - no suffocation damage if short height
         } else if (source instanceof IndirectEntityDamageSource && !(this.level.purpurConfig.endermanIgnoreProjectiles && source.getDirectEntity() instanceof net.minecraft.world.entity.projectile.Projectile)) { // Purpur
             Entity entity = source.getDirectEntity();
@@ -670,14 +673,16 @@ public class EnderMan extends Monster implements NeutralMob {
                 }
             } else {
                 if (this.target != null && !this.enderman.isPassenger()) {
-                    if (this.enderman.isLookingAtMe((Player) this.target)) {
-                        if (this.target.distanceToSqr((Entity) this.enderman) < 16.0D && this.enderman.tryEscape(com.destroystokyo.paper.event.entity.EndermanEscapeEvent.Reason.STARE)) { // Paper
-                            this.enderman.teleport();
+                    if (net.rocryn.bamboo.BambooConfig.endermanSpawnerTeleport || !this.enderman.spawnedViaMobSpawner) { // Bamboo - don't teleport if spawned via spawner
+                        if (this.enderman.isLookingAtMe((Player) this.target)) {
+                            if (this.target.distanceToSqr((Entity) this.enderman) < 16.0D && this.enderman.tryEscape(com.destroystokyo.paper.event.entity.EndermanEscapeEvent.Reason.STARE)) { // Paper
+                                this.enderman.teleport();
+                            }
+
+                            this.teleportTime = 0;
+                        } else if (this.target.distanceToSqr((Entity) this.enderman) > 256.0D && this.teleportTime++ >= this.adjustedTickDelay(30) && this.enderman.teleportTowards(this.target)) {
+                            this.teleportTime = 0;
                         }
-
-                        this.teleportTime = 0;
-                    } else if (this.target.distanceToSqr((Entity) this.enderman) > 256.0D && this.teleportTime++ >= this.adjustedTickDelay(30) && this.enderman.teleportTowards(this.target)) {
-                        this.teleportTime = 0;
                     }
                 }
 
diff --git a/src/main/java/net/rocryn/bamboo/BambooConfig.java b/src/main/java/net/rocryn/bamboo/BambooConfig.java
index 17d253f2859f733b66efff43a1f455298cccc13d..2c8ca798ec4b93e2c4170ee347675bdd93bc31ae 100644
--- a/src/main/java/net/rocryn/bamboo/BambooConfig.java
+++ b/src/main/java/net/rocryn/bamboo/BambooConfig.java
@@ -139,4 +139,7 @@ public class BambooConfig {
 
     public static Boolean sheepGriefGrass = true;
     private static void sheepGriefGrass() { sheepGriefGrass = getBoolean("mobs.passive.sheep.grief-grass", sheepGriefGrass); }
+
+    public static Boolean endermanSpawnerTeleport = true;
+    private static void endermanSpawnerTeleport() { endermanSpawnerTeleport = getBoolean("mobs.hostile.enderman.teleport-if-spawned-via-spawner", endermanSpawnerTeleport); }
 }
